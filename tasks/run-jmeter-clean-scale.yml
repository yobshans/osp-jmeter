# --------------------------------------------------------------------------------------------------------------------------------------
# Run test using JMeter 
# --------------------------------------------------------------------------------------------------------------------------------------
  - block:
      - replace:
          dest={{ playbook_dir }}/scripts/{{ jmeter_test }}
          regexp='testname="Thread Group - Monitor Not Full" enabled="false"'
          replace='testname="Thread Group - Monitor Not Full" enabled="true"'
          backup=no
        when: ceph_count.stdout == "0"
        
      - replace:
          dest={{ playbook_dir }}/scripts/{{ jmeter_test }}
          regexp='testname="Thread Group - Monitor Full" enabled="false"'
          replace='testname="Thread Group - Monitor Full" enabled="true"'
          backup=no
        when: ceph_count.stdout != "0"
    when: perf_monitor
    
  - name: Start Date and Time
    shell: "date +'%F %T'"
    register: start_date

  - name: JMeter - Run REST API Performance Test with PerfMon Plugin
    shell: >
      $JMETER_HOME/bin/jmeter -n 
      -t {{ playbook_dir }}/scripts/{{ jmeter_test }} 
      -l {{ playbook_dir }}/results/{{ test_run_name }}/xml/result.jtl 
      -j {{ playbook_dir }}/results/{{ test_run_name }}/log/jmeter.log 
      -Djmeter.save.saveservice.output_format=xml 
      -Djmeter.save.saveservice.thread_counts=true 
      -Djmeter.save.saveservice.bytes=true 
      -Djmeter.save.saveservice.response_data.on_error=true 
      -Jthreadgroup.count={{ thread_count }} 
      -Jthreadgroup.rampup={{ thread_rampup }} 
      -Jiteration.count={{ iteration_count }} 
      -Jproj.path={{ playbook_dir }} 
      -Jrun.name={{ test_run_name }} 
      -Jospd.host={{ uc_node }} 
      -Jimage.name={{ image_name }} 
      -Jflavor.ref={{ flavor_ref }}
      -Jcontr.host={{ contr_0_node.stdout }} 
      -Jcomp.host={{ comp_0_node.stdout }} 
      -Jceph.host={{ ceph_0_node.stdout | default('1.1.1.1')}} 
      -Junder-rabbitmq={{ under_rabbitmq_id.stdout | int }} 
      -Junder-httpd={{ under_httpd_id.stdout | int }} 
      -Junder-neutron-server={{ under_neutron_server_id.stdout | int }} 
      -Jcontr-rabbitmq={{ contr_rabbitmq_id.stdout | int }} 
      -Jcontr-httpd={{ contr_httpd_id.stdout | int }} 
      -Jcontr-neutron-server={{ contr_neutron_server_id.stdout | int }} 
      -Jcontr-mysqld={{ contr_mysqld_id.stdout | int }} 
      -Jcontr-gnocchi-metric={{ contr_gnocchi_metric_id.stdout | int }} 
      -Jcontr-cinder-volume={{ contr_cinder_volume_id.stdout | int }} 
      -Jcontr-swift-srv={{ contr_swift_srv_id.stdout | int }} 
      -Jcontr-glance-api={{ contr_glance_api_id.stdout | int }} 
      -Jcontr-ceilometer-agent={{ contr_ceilometer_agent_id.stdout | int }} 
      -Jcomp-nova-compute={{ comp_nova_compute_id.stdout | int }} 
      -Jcomp-neutron-openvswitch={{ comp_neutron_openvswitch_id.stdout | int }}
      -Jcomp-ceilometer-poll={{ comp_ceilometer_poll_id.stdout | int }} 
      -Jcomp-libvirtd={{ comp_libvirtd_id.stdout | int }} 
      -Jcomp-ovs-vswitchd={{ comp_ovs_vswitchd_id.stdout | int }} 
      -Jceph-libvirtd={{ ceph_libvirtd_id.stdout | int | default('0')}} 
      -Jceph-ceph-osd={{ ceph_ceph_osd_id.stdout | int | default('0')}} 
      -Jssl.mode={{ ssl_mode }}
    when: perf_monitor

  - name: JMeter - Run REST API Performance Test
    shell: >
      $JMETER_HOME/bin/jmeter -n 
      -t {{ playbook_dir }}/scripts/{{ jmeter_test }} 
      -l {{ playbook_dir }}/results/{{ test_run_name }}/xml/result.jtl 
      -j {{ playbook_dir }}/results/{{ test_run_name }}/log/jmeter.log 
      -Djmeter.save.saveservice.output_format=xml 
      -Djmeter.save.saveservice.thread_counts=true 
      -Djmeter.save.saveservice.bytes=true 
      -Djmeter.save.saveservice.response_data.on_error=true 
      -Jthreadgroup.count={{ thread_count }} 
      -Jthreadgroup.rampup={{ thread_rampup }} 
      -Jiteration.count={{ iteration_count }} 
      -Jproj.path={{ playbook_dir }} 
      -Jrun.name={{ test_run_name }} 
      -Jospd.host={{ uc_node }} 
      -Jimage.name={{ image_name }} 
      -Jflavor.ref={{ flavor_ref }}
      -Jssl.mode={{ ssl_mode }}
    when: perf_monitor == "false" or not perf_monitor
    
  - name: End Date and Time
    shell: "date +'%F %T'"
    register: end_date
    
  - name: Test Duration
    shell: "date -u -d @$(($(date -d \"{{ end_date.stdout}}\" '+%s') - $(date -d \"{{ start_date.stdout}}\" '+%s'))) '+%T'"
    register: test_duration

  - block:
      - replace:
          dest={{ playbook_dir }}/scripts/{{ jmeter_test }}
          regexp='testname="Thread Group - Monitor Not Full" enabled="true"'
          replace='testname="Thread Group - Monitor Not Full" enabled="false"'
          backup=no
        when: ceph_count.stdout == "0"
        
      - replace:
          dest={{ playbook_dir }}/scripts/{{ jmeter_test }}
          regexp='testname="Thread Group - Monitor Full" enabled="true"'
          replace='testname="Thread Group - Monitor Full" enabled="false"'
          backup=no
        when: ceph_count.stdout != "0"
    when: perf_monitor

# --------------------------------------------------------------------------------------------------------------------------------------
# END
# --------------------------------------------------------------------------------------------------------------------------------------

