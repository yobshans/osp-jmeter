# --------------------------------------------------------------------------------------------------------------------------------------
# Generate reports 
# --------------------------------------------------------------------------------------------------------------------------------------

  - name:  Copy logo image files 
    shell: "cp /opt/osp-jmeter/templates/jmeter-logo.svg /opt/osp-jmeter/templates/openstack-logo.svg /opt/osp-jmeter/results/{{ test_run_name }}/img/"

  - name:  Copy CSS file
    shell: "cp /opt/osp-jmeter/templates/result.css /opt/osp-jmeter/results/{{ test_run_name }}/html/"

  - name:  Copy custer status file after fail
    shell: "scp root@{{ uc_node_ip.stdout }}:/tmp/stack-status-after-fail.txt /opt/osp-jmeter/results/{{ test_run_name }}/log/stack-status-after-fail.txt"
    ignore_errors: yes
    
  - name:  Xalan-J - Generate XML file with 90% trx response time for compare
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-restapi-xml.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/xml/result-90percent.xml -XML

  - name:  Xalan-J - Generate XML file with perfmon min/ave/max for compare CPU
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/{{ item }}.jtl 
      -XSL /opt/osp-jmeter/templates/generate-perfmon-xml.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/xml/xml_result_{{ item }}.xml -XML
    with_items: "{{ perfmon_cpu }}"
    when: perf_monitor

  - name:  Xalan-J - Generate XML file with perfmon min/ave/max for compare Memory
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/{{ item }}.jtl 
      -XSL /opt/osp-jmeter/templates/generate-perfmon-xml.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/xml/xml_result_{{ item }}.xml -XML
    with_items: "{{ perfmon_mem }}"
    when: perf_monitor

  - name:  Xalan-J - Generate XML file with perfmon min/ave/max for compare Disk
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/{{ item }}.jtl 
      -XSL /opt/osp-jmeter/templates/generate-perfmon-xml.xsl 
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/xml/xml_result_{{ item }}.xml -XML
    with_items: "{{ perfmon_disk }}"
    when: perf_monitor

  - name:  Xalan-J - Generate XML file with perfmon min/ave/max for compare Network
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/{{ item }}.jtl 
      -XSL /opt/osp-jmeter/templates/generate-perfmon-xml.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/xml/xml_result_{{ item }}.xml -XML
    with_items: "{{ perfmon_net }}"
    when: perf_monitor

  - name: Xalan-J - Generate HTML Summary report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM testRunName '{{ test_run_name }}' 
      -PARAM buildNum '{{ build_num }}' 
      -PARAM testRes2 /opt/osp-jmeter/results/{{ test_run_name }}/xml/result-90percent.xml
      -PARAM testDuration '{{ test_duration.stdout | default('0') }}'
      -PARAM numThreads '{{ thread_count }}' 
      -PARAM numIterations '{{ iteration_count }}' 
      -PARAM ucSys '{{ uc_vendor.stdout }} {{ uc_product.stdout }}' 
      -PARAM ucOs '{{ uc_os.stdout }}'
      -PARAM ucCpu '{{ uc_cpu_count.stdout }} x {{ uc_cpu_model.stdout }}'
      -PARAM ucMem '{{ uc_mem.stdout }}'
      -PARAM contrSys '{{ contr_vendor.stdout }} {{ contr_product.stdout }}'
      -PARAM contrOs '{{ contr_os.stdout }}'
      -PARAM contrCpu '{{ contr_cpu_count.stdout }} x {{ contr_cpu_model.stdout }}'
      -PARAM contrMem '{{ contr_mem.stdout }}'
      -PARAM compSys '{{ comp_vendor.stdout }} {{ comp_product.stdout }}'
      -PARAM compOs '{{ comp_os.stdout }}'
      -PARAM compCpu '{{ comp_cpu_count.stdout }} x {{ comp_cpu_model.stdout }}'
      -PARAM compMem '{{ comp_mem.stdout }}'
      -PARAM cephSys '{{ ceph_vendor.stdout | default('n/a') }} {{ ceph_product.stdout | default('n/a') }}'
      -PARAM cephOs '{{ ceph_os.stdout | default('n/a') }}'
      -PARAM cephCpu '{{ ceph_cpu_count.stdout | default('n/a') }} x {{ ceph_cpu_model.stdout | default('n/a') }}'
      -PARAM cephMem '{{ ceph_mem.stdout | default('n/a') }}'
      -PARAM contrCount '{{ contr_count.stdout }}'
      -PARAM compCount '{{ comp_count.stdout }}'
      -PARAM cephCount '{{ ceph_count.stdout }}'
      -PARAM perfMon '{{ perf_monitor }}'
      -PARAM note '{{ notes }}'
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-ping-summary-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/index.html -HTML

  - name: Xalan-J - Generate HTML REST API report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM testRunName '{{ test_run_name }}' 
      -PARAM buildNum '{{ build_num }}' 
      -PARAM perfMon '{{ perf_monitor }}'
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-load-restapi-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/api.html -HTML

  - name: Xalan-J - Generate HTML SSH Command report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM tabName 'REST API Calls Response Time Report'
      -PARAM perfMon '{{ perf_monitor }}'
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-load-ssh-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/ssh.html -HTML
      
  - name: Xalan-J - Generate HTML CPU Header report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM activeTab CPU
      -PARAM tabName 'REST API Calls Response Time Report'
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-system-header-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/cpu_header.html -HTML
    when: perf_monitor

  - name: Xalan-J - Generate HTML report of CPU statistics
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM perfmonType '{{ item }}' 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/{{ item }}.jtl 
      -XSL /opt/osp-jmeter/templates/generate-cpu-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/html_cpu_{{ item }}.html -HTML
    with_items: "{{ perfmon_cpu }}"
    when: perf_monitor

  - name:  Merge CPU html reports into single 
    shell: >
      cat /opt/osp-jmeter/results/{{ test_run_name }}/html/html_cpu_{{ item }}.html >> /opt/osp-jmeter/results/{{ test_run_name }}/html/html_cpu.html
    with_items: "{{ perfmon_cpu }}"
    when: perf_monitor
    
  - name: Xalan-J - Generate HTML Footer report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-footer-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/footer.html -HTML
    when: perf_monitor

  - name:  Final Merge all CPU html reports into single 
    shell: >
      cat /opt/osp-jmeter/results/{{ test_run_name }}/html/cpu_header.html /opt/osp-jmeter/results/{{ test_run_name }}/html/html_cpu.html /opt/osp-jmeter/results/{{ test_run_name }}/html/footer.html > 
      /opt/osp-jmeter/results/{{ test_run_name }}/html/cpu.html
    when: perf_monitor

  - name: Xalan-J - Generate HTML Memory Header report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM activeTab Mem
      -PARAM tabName 'REST API Calls Response Time Report'
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-system-header-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/mem_header.html -HTML
    when: perf_monitor

  - name: Xalan-J - Generate HTML report of Memory statistics
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM perfmonType '{{ item }}' 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/{{ item }}.jtl 
      -XSL /opt/osp-jmeter/templates/generate-mem-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/html_mem_{{ item }}.html -HTML
    with_items: "{{ perfmon_mem }}"
    when: perf_monitor

  - name:  Merge Memory html reports into single 
    shell: >
      cat /opt/osp-jmeter/results/{{ test_run_name }}/html/html_mem_{{ item }}.html >> /opt/osp-jmeter/results/{{ test_run_name }}/html/html_mem.html
    with_items: "{{ perfmon_mem }}"
    when: perf_monitor
    
  - name:  Final Merge all Memory html reports into single 
    shell: >
      cat /opt/osp-jmeter/results/{{ test_run_name }}/html/mem_header.html /opt/osp-jmeter/results/{{ test_run_name }}/html/html_mem.html /opt/osp-jmeter/results/{{ test_run_name }}/html/footer.html > 
      /opt/osp-jmeter/results/{{ test_run_name }}/html/mem.html
    when: perf_monitor

  - name: Xalan-J - Generate HTML Network Header report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM activeTab Net
      -PARAM tabName 'REST API Calls Response Time Report'
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-system-header-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/net_header.html -HTML
    when: perf_monitor

  - name: Xalan-J - Generate HTML report of Network statistics
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM perfmonType '{{ item }}' 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/{{ item }}.jtl 
      -XSL /opt/osp-jmeter/templates/generate-net-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/html_net_{{ item }}.html -HTML
    with_items: "{{ perfmon_net }}"
    when: perf_monitor

  - name:  Merge Network html reports into single 
    shell: >
      cat /opt/osp-jmeter/results/{{ test_run_name }}/html/html_net_{{ item }}.html >> /opt/osp-jmeter/results/{{ test_run_name }}/html/html_net.html
    with_items: "{{ perfmon_net }}"
    when: perf_monitor
    
  - name:  Final Merge all Network html reports into single 
    shell: >
      cat /opt/osp-jmeter/results/{{ test_run_name }}/html/net_header.html /opt/osp-jmeter/results/{{ test_run_name }}/html/html_net.html /opt/osp-jmeter/results/{{ test_run_name }}/html/footer.html > 
      /opt/osp-jmeter/results/{{ test_run_name }}/html/net.html
    when: perf_monitor

  - name: Xalan-J - Generate HTML Disk Header report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM activeTab Disk
      -PARAM tabName 'REST API Calls Response Time Report'
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-system-header-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/disk_header.html -HTML
    when: perf_monitor

  - name: Xalan-J - Generate HTML report of Disk statistics
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM perfmonType '{{ item }}' 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/{{ item }}.jtl 
      -XSL /opt/osp-jmeter/templates/generate-disk-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/html/html_disk_{{ item }}.html -HTML
    with_items: "{{ perfmon_disk }}"
    when: perf_monitor

  - name:  Merge Disk html reports into single 
    shell: >
      cat /opt/osp-jmeter/results/{{ test_run_name }}/html/html_disk_{{ item }}.html >> /opt/osp-jmeter/results/{{ test_run_name }}/html/html_disk.html
    with_items: "{{ perfmon_disk }}"
    when: perf_monitor
    
  - name:  Final Merge all Disk html reports into single 
    shell: >
      cat /opt/osp-jmeter/results/{{ test_run_name }}/html/disk_header.html /opt/osp-jmeter/results/{{ test_run_name }}/html/html_disk.html /opt/osp-jmeter/results/{{ test_run_name }}/html/footer.html > 
      /opt/osp-jmeter/results/{{ test_run_name }}/html/disk.html
    when: perf_monitor

  - name: Xalan-J - Generate Plain text REST API Performance test report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM testRunName '{{ test_run_name }}' 
      -PARAM buildNum '{{ build_num }}' 
      -PARAM testRes2 /opt/osp-jmeter/results/{{ test_run_name }}/xml/result-90percent.xml
      -PARAM testDuration '{{ test_duration.stdout | default('0') }}'
      -PARAM numThreads '{{ thread_count }}' 
      -PARAM numIterations '{{ iteration_count }}' 
      -PARAM ucSys '{{ uc_vendor.stdout }} {{ uc_product.stdout }}' 
      -PARAM ucOs '{{ uc_os.stdout }}'
      -PARAM ucCpu '{{ uc_cpu_count.stdout }} x {{ uc_cpu_model.stdout }}'
      -PARAM ucMem '{{ uc_mem.stdout }}'
      -PARAM contrSys '{{ contr_vendor.stdout }} {{ contr_product.stdout }}'
      -PARAM contrOs '{{ contr_os.stdout }}'
      -PARAM contrCpu '{{ contr_cpu_count.stdout }} x {{ contr_cpu_model.stdout }}'
      -PARAM contrMem '{{ contr_mem.stdout }}'
      -PARAM compSys '{{ comp_vendor.stdout }} {{ comp_product.stdout }}'
      -PARAM compOs '{{ comp_os.stdout }}'
      -PARAM compCpu '{{ comp_cpu_count.stdout }} x {{ comp_cpu_model.stdout }}'
      -PARAM compMem '{{ comp_mem.stdout }}'
      -PARAM cephSys '{{ ceph_vendor.stdout | default('n/a') }} {{ ceph_product.stdout | default('n/a') }}'
      -PARAM cephOs '{{ ceph_os.stdout | default('n/a') }}'
      -PARAM cephCpu '{{ ceph_cpu_count.stdout | default('n/a') }} x {{ ceph_cpu_model.stdout | default('n/a') }}'
      -PARAM cephMem '{{ ceph_mem.stdout | default('n/a') }}'
      -PARAM contrCount '{{ contr_count.stdout }}'
      -PARAM compCount '{{ comp_count.stdout }}'
      -PARAM cephCount '{{ ceph_count.stdout }}'
      -PARAM perfMon '{{ perf_monitor }}'
      -PARAM note '{{ notes }}'
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-system-restapi-txt-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/log/report.txt -TEXT

  - name: Xalan-J - Generate CSV REST API response time report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM testRunName '{{ test_run_name }}' 
      -PARAM buildNum '{{ build_num }}' 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-restapi-csv-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/log/report-restapi.csv -TEXT
      
  - name: Xalan-J - Generate CSV Transaction elapsed time report
    shell: >
      java -classpath $JMETER_HOME/lib/xalan-2.7.2.jar:$JMETER_HOME/lib/serializer-2.7.2.jar:$JMETER_HOME/lib/xercesImpl-2.11.0.jar:$JMETER_HOME/lib/xml-apis-1.4.01.jar org.apache.xalan.xslt.Process 
      -PARAM testRunName '{{ test_run_name }}' 
      -PARAM buildNum '{{ build_num }}' 
      -IN /opt/osp-jmeter/results/{{ test_run_name }}/xml/result.jtl 
      -XSL /opt/osp-jmeter/templates/generate-trx-csv-report.xsl
      -OUT /opt/osp-jmeter/results/{{ test_run_name }}/log/report-trx.csv -TEXT

  - name: JMeter - Generate Dashboard Report
    shell: >
      $JMETER_HOME/bin/jmeter 
      -g /opt/osp-jmeter/results/{{ test_run_name }}/xml/test-result.csv
      -o /opt/osp-jmeter/results/{{ test_run_name }}/dashboard
      
# --------------------------------------------------------------------------------------------------------------------------------------
# END
# --------------------------------------------------------------------------------------------------------------------------------------

