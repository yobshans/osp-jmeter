<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="threadgroup.count" elementType="Argument">
            <stringProp name="Argument.name">threadgroup.count</stringProp>
            <stringProp name="Argument.value">${__P(threadgroup.count,2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threadgroup.rampup" elementType="Argument">
            <stringProp name="Argument.name">threadgroup.rampup</stringProp>
            <stringProp name="Argument.value">${__P(threadgroup.rampup,100)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="iteration.count" elementType="Argument">
            <stringProp name="Argument.name">iteration.count</stringProp>
            <stringProp name="Argument.value">${__P(iteration.count,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="proj.path" elementType="Argument">
            <stringProp name="Argument.name">proj.path</stringProp>
            <stringProp name="Argument.value">${__P(proj.path,/opt/osp-jmeter)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="run.name" elementType="Argument">
            <stringProp name="Argument.name">run.name</stringProp>
            <stringProp name="Argument.value">${__P(run.name,${__time(yyyy-MM-dd-hhmmss)})}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ospd.host" elementType="Argument">
            <stringProp name="Argument.name">ospd.host</stringProp>
            <stringProp name="Argument.value">${__P(ospd.host,10.0.0.73)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ospd.user" elementType="Argument">
            <stringProp name="Argument.name">ospd.user</stringProp>
            <stringProp name="Argument.value">${__P(ospd.user,root)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ospd.pass" elementType="Argument">
            <stringProp name="Argument.name">ospd.pass</stringProp>
            <stringProp name="Argument.value">${__P(ospd.pass,100yard-)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stack.user" elementType="Argument">
            <stringProp name="Argument.name">stack.user</stringProp>
            <stringProp name="Argument.value">${__P(stack.user,stack)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stack.pass" elementType="Argument">
            <stringProp name="Argument.name">stack.pass</stringProp>
            <stringProp name="Argument.value">${__P(ospd.pass,qum5net)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="contr.host" elementType="Argument">
            <stringProp name="Argument.name">contr.host</stringProp>
            <stringProp name="Argument.value">${__P(contr.host,10.9.77.61)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="comp.host" elementType="Argument">
            <stringProp name="Argument.name">comp.host</stringProp>
            <stringProp name="Argument.value">${__P(comp.host,10.9.77.64)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ceph.host" elementType="Argument">
            <stringProp name="Argument.name">ceph.host</stringProp>
            <stringProp name="Argument.value">${__P(ceph.host,192.168.24.8)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="iperf.host" elementType="Argument">
            <stringProp name="Argument.name">iperf.host</stringProp>
            <stringProp name="Argument.value">${__P(iperf.host,10.0.0.73)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ssl.mode" elementType="Argument">
            <stringProp name="Argument.name">ssl.mode</stringProp>
            <stringProp name="Argument.value">${__P(ssl.mode,false)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="vm_amount" elementType="Argument">
            <stringProp name="Argument.name">vm_amount</stringProp>
            <stringProp name="Argument.value">${__P(vm.amount,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="name" elementType="Argument">
            <stringProp name="Argument.name">name</stringProp>
            <stringProp name="Argument.value">${__P(name,cloud)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">4444</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cpu.workers" elementType="Argument">
            <stringProp name="Argument.name">cpu.workers</stringProp>
            <stringProp name="Argument.value">${__P(cpu.workers,2)}</stringProp>
            <stringProp name="Argument.desc">--cpu N        spawn N workers spinning on sqrt()</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cpu.percent" elementType="Argument">
            <stringProp name="Argument.name">cpu.percent</stringProp>
            <stringProp name="Argument.value">${__P(cpu.percent,50)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">--cpu-load P         load CPU by P %%, 0=sleep, 100=full load</stringProp>
          </elementProp>
          <elementProp name="vm.workers" elementType="Argument">
            <stringProp name="Argument.name">vm.workers</stringProp>
            <stringProp name="Argument.value">${__P(vm.workers,1)}</stringProp>
            <stringProp name="Argument.desc">--vm N         spawn N workers spinning on malloc()/free()</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="vm.mbytes" elementType="Argument">
            <stringProp name="Argument.name">vm.mbytes</stringProp>
            <stringProp name="Argument.value">${__P(vm.mbytes,128)}</stringProp>
            <stringProp name="Argument.desc">--vm-bytes B   malloc B bytes per vm worker (default is 256MB)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hdd.workers" elementType="Argument">
            <stringProp name="Argument.name">hdd.workers</stringProp>
            <stringProp name="Argument.value">${__P(hdd.workers,1)}</stringProp>
            <stringProp name="Argument.desc">--hdd N        spawn N workers spinning on write()/unlink()</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hdd.gbytes" elementType="Argument">
            <stringProp name="Argument.name">hdd.gbytes</stringProp>
            <stringProp name="Argument.value">${__P(hdd.gbytes,1)}</stringProp>
            <stringProp name="Argument.desc">--hdd-bytes B  write B bytes per hdd worker (default is 1GB)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stress.time.sec" elementType="Argument">
            <stringProp name="Argument.name">stress.time.sec</stringProp>
            <stringProp name="Argument.value">${__P(stress.time.sec,60)}</stringProp>
            <stringProp name="Argument.desc">--timeout N    timeout after N seconds</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1474295121000</longProp>
        <longProp name="ThreadGroup.end_time">1474295121000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="Command admin_pass" enabled="true">
          <stringProp name="command">grep OS_PASSWORD /home/stack/overcloudrc</stringProp>
          <intProp name="connectionTimeout">5000</intProp>
          <stringProp name="hostname">${ospd.host}</stringProp>
          <stringProp name="passphrase"></stringProp>
          <stringProp name="password">${ospd.pass}</stringProp>
          <intProp name="port">22</intProp>
          <boolProp name="printStdErr">true</boolProp>
          <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
          <boolProp name="useReturnCode">true</boolProp>
          <boolProp name="useTty">false</boolProp>
          <stringProp name="username">${ospd.user}</stringProp>
        </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="admin_pass" enabled="true">
            <stringProp name="TestPlan.comments">admin_pass</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ssh_admin_pass</stringProp>
            <stringProp name="RegexExtractor.regex">OS_PASSWORD=(.+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">None</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="Command server_ips" enabled="true">
          <stringProp name="command">sudo grep no_proxy /home/stack/overcloudrc</stringProp>
          <intProp name="connectionTimeout">5000</intProp>
          <stringProp name="hostname">${ospd.host}</stringProp>
          <stringProp name="passphrase"></stringProp>
          <stringProp name="password">${ospd.pass}</stringProp>
          <intProp name="port">22</intProp>
          <boolProp name="printStdErr">true</boolProp>
          <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
          <boolProp name="useReturnCode">true</boolProp>
          <boolProp name="useTty">false</boolProp>
          <stringProp name="username">${ospd.user}</stringProp>
        </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="server_ip" enabled="true">
            <stringProp name="TestPlan.comments">server_ip</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ssh_server_ip</stringProp>
            <stringProp name="RegexExtractor.regex">export no_proxy=,(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">None</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="nova_api_server_ip" enabled="true">
            <stringProp name="TestPlan.comments">nova_api_server_ip</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ssh_nova_api_server_ip</stringProp>
            <stringProp name="RegexExtractor.regex">export no_proxy=,(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">None</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="Command server_ips 2" enabled="true">
          <stringProp name="command">sudo grep no_proxy /home/stack/overcloudrc</stringProp>
          <intProp name="connectionTimeout">5000</intProp>
          <stringProp name="hostname">${ospd.host}</stringProp>
          <stringProp name="passphrase"></stringProp>
          <stringProp name="password">${ospd.pass}</stringProp>
          <intProp name="port">22</intProp>
          <boolProp name="printStdErr">true</boolProp>
          <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
          <boolProp name="useReturnCode">true</boolProp>
          <boolProp name="useTty">false</boolProp>
          <stringProp name="username">${ospd.user}</stringProp>
        </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="keystone_server_ip" enabled="true">
            <stringProp name="TestPlan.comments">keystone_server_ip</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ssh_keystone_server_ip</stringProp>
            <stringProp name="RegexExtractor.regex">export no_proxy=,${ssh_server_ip},(.+?)\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">None</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SCRIPT Create Counters" enabled="true">
          <stringProp name="TestPlan.comments">SCRIPT Create Counters</stringProp>
          <stringProp name="BeanShellSampler.query">${__setProperty(admin_pass, ${ssh_admin_pass})};
${__setProperty(keystone_server_ip,${ssh_keystone_server_ip})};
${__setProperty(nova_api_server_ip, ${ssh_nova_api_server_ip})};
${__setProperty(server_ip, ${ssh_server_ip})};</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="RPM.EPEL.On.IPERF.SRV" enabled="false">
          <stringProp name="command">sudo rpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</stringProp>
          <intProp name="connectionTimeout">5000</intProp>
          <stringProp name="hostname">${iperf.host}</stringProp>
          <stringProp name="passphrase"></stringProp>
          <stringProp name="password">${ospd.pass}</stringProp>
          <intProp name="port">22</intProp>
          <boolProp name="printStdErr">true</boolProp>
          <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
          <boolProp name="useReturnCode">true</boolProp>
          <boolProp name="useTty">false</boolProp>
          <stringProp name="username">${ospd.user}</stringProp>
        </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
        <hashTree/>
        <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="YUM.IPERF.On.IPERF.SRV" enabled="false">
          <stringProp name="command">sudo yum install -y iperf3.x86_64</stringProp>
          <intProp name="connectionTimeout">5000</intProp>
          <stringProp name="hostname">${iperf.host}</stringProp>
          <stringProp name="passphrase"></stringProp>
          <stringProp name="password">${ospd.pass}</stringProp>
          <intProp name="port">22</intProp>
          <boolProp name="printStdErr">true</boolProp>
          <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
          <boolProp name="useReturnCode">true</boolProp>
          <boolProp name="useTty">false</boolProp>
          <stringProp name="username">${ospd.user}</stringProp>
        </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
        <hashTree/>
        <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="MKDIR.STAT" enabled="true">
          <stringProp name="command">sudo mkdir /tmp/${run.name}</stringProp>
          <intProp name="connectionTimeout">5000</intProp>
          <stringProp name="hostname">${ospd.host}</stringProp>
          <stringProp name="passphrase"></stringProp>
          <stringProp name="password">${ospd.pass}</stringProp>
          <intProp name="port">22</intProp>
          <boolProp name="printStdErr">true</boolProp>
          <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
          <boolProp name="useReturnCode">true</boolProp>
          <boolProp name="useTty">false</boolProp>
          <stringProp name="username">${ospd.user}</stringProp>
        </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - Data plane load" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${threadgroup.count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${threadgroup.rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1474379537000</longProp>
        <longProp name="ThreadGroup.end_time">1474379537000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SCRIPT Setup Ports" enabled="true">
          <stringProp name="TestPlan.comments">SCRIPT Setup Ports for SSL</stringProp>
          <stringProp name="BeanShellSampler.query">if(&quot;true&quot;.equals(vars.get(&quot;ssl.mode&quot;))){
	vars.put(&quot;protocol&quot;, &quot;https&quot;);
	vars.put(&quot;keystone_admin_port&quot;, &quot;35357&quot;);
	vars.put(&quot;keystone_service_port&quot;, &quot;13000&quot;);
	vars.put(&quot;nova_api_port&quot;, &quot;13774&quot;);
	vars.put(&quot;neutron_port&quot;, &quot;13696&quot;);
	vars.put(&quot;cinder_port&quot;, &quot;13776&quot;);
	vars.put(&quot;glance_port&quot;, &quot;13292&quot;);
}else if(&quot;True&quot;.equals(vars.get(&quot;ssl.mode&quot;))){
	vars.put(&quot;protocol&quot;, &quot;https&quot;);
	vars.put(&quot;keystone_admin_port&quot;, &quot;35357&quot;);
	vars.put(&quot;keystone_service_port&quot;, &quot;13000&quot;);
	vars.put(&quot;nova_api_port&quot;, &quot;13774&quot;);
	vars.put(&quot;neutron_port&quot;, &quot;13696&quot;);
	vars.put(&quot;cinder_port&quot;, &quot;13776&quot;);
	vars.put(&quot;glance_port&quot;, &quot;13292&quot;);
}else{
	vars.put(&quot;protocol&quot;, &quot;http&quot;);
	vars.put(&quot;keystone_admin_port&quot;, &quot;35357&quot;);
	vars.put(&quot;keystone_service_port&quot;, &quot;5000&quot;);
	vars.put(&quot;nova_api_port&quot;, &quot;8774&quot;);
	vars.put(&quot;neutron_port&quot;, &quot;9696&quot;);
	vars.put(&quot;cinder_port&quot;, &quot;8776&quot;);
	vars.put(&quot;glance_port&quot;, &quot;9292&quot;);	
}
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SCRIPT Create Counters" enabled="true">
          <stringProp name="TestPlan.comments">SCRIPT Create Counters</stringProp>
          <stringProp name="BeanShellSampler.query">int threadNum = ${__threadNum};
vars.put(&quot;tenant_count&quot;, String.valueOf(threadNum));
vars.put(&quot;vm_count&quot;, &quot;1&quot;);
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01.KEYSTONE.POST.Admin.Token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;auth&quot;: {&#xd;
        &quot;identity&quot;: {&#xd;
            &quot;methods&quot;: [&#xd;
                &quot;password&quot;&#xd;
            ],&#xd;
            &quot;password&quot;: {&#xd;
                &quot;user&quot;: {&#xd;
                    &quot;name&quot;: &quot;admin&quot;,&#xd;
                    &quot;password&quot;: &quot;${__P(admin_pass)}&quot;,&#xd;
	         &quot;domain&quot;: {&#xd;
                        &quot;name&quot;: &quot;Default&quot;&#xd;
                   }&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        &quot;scope&quot;: {&#xd;
            &quot;project&quot;: {&#xd;
                &quot;domain&quot;: {&#xd;
                    &quot;name&quot;: &quot;Default&quot;&#xd;
                },&#xd;
                &quot;name&quot;: &quot;admin&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(server_ip)}</stringProp>
          <stringProp name="HTTPSampler.port">${keystone_service_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v3/auth/tokens</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">01.KEYSTONE.POST.Admin.Token</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Session-TTL" elementType="Header">
                <stringProp name="Header.name">Session-TTL</stringProp>
                <stringProp name="Header.value">360</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20131023 Firefox/17.0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="extract-token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">token_id</stringProp>
            <stringProp name="RegexExtractor.regex">X-Subject-Token: (.+?)\s</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">None</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01.KEYSTONE.POST.Admin.Token" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;auth&quot;:{&#xd;
	&quot;tenantName&quot;: &quot;admin&quot;, &#xd;
	&quot;passwordCredentials&quot;: &#xd;
            {&quot;username&quot;: &quot;admin&quot;, &#xd;
            &quot;password&quot;: &quot;${__P(admin_pass)}&quot;&#xd;
            }&#xd;
        }&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(server_ip)}</stringProp>
          <stringProp name="HTTPSampler.port">${keystone_service_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2.0/tokens</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">KEYSTONE.POST.Admin.Token</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Session-TTL" elementType="Header">
                <stringProp name="Header.name">Session-TTL</stringProp>
                <stringProp name="Header.value">360</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20131023 Firefox/17.0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="extract-token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token_id</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;: &quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">None</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02.KEYSTONE.GET.Search.Tenant" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(server_ip)}</stringProp>
          <stringProp name="HTTPSampler.port">${keystone_service_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v3/projects?name=${tenant_name}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">KEYSTONE.GET.Tenant.Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-auth-token</stringProp>
                <stringProp name="Header.value">${token_id}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1889674496">tenant_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1061081501">
                <stringProp name="1350267837">${name}-${tenant_count}-tenant</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract tenan_id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">tenant_id</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;: &quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">None</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If tenant_id != None" enabled="true">
          <stringProp name="IfController.condition">${__javaScript(&quot;${tenant_id}&quot; != &quot;None&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03.KEYSTONE.POST.Tenant.Token" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;auth&quot;: {&#xd;
        &quot;identity&quot;: {&#xd;
            &quot;methods&quot;: [&#xd;
                &quot;password&quot;&#xd;
            ],&#xd;
            &quot;password&quot;: {&#xd;
                &quot;user&quot;: {&#xd;
                    &quot;name&quot;: &quot;${user_name}&quot;,&#xd;
                    &quot;password&quot;: &quot;qum5net&quot;,&#xd;
	         &quot;domain&quot;: {&#xd;
                        &quot;name&quot;: &quot;Default&quot;&#xd;
                   }&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        &quot;scope&quot;: {&#xd;
            &quot;project&quot;: {&#xd;
                &quot;domain&quot;: {&#xd;
                    &quot;name&quot;: &quot;Default&quot;&#xd;
                },&#xd;
                &quot;name&quot;: &quot;${tenant_name}&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(server_ip)}</stringProp>
            <stringProp name="HTTPSampler.port">${keystone_service_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v3/auth/tokens</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">08.KEYSTONE.POST.Tenant.Token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-TTL" elementType="Header">
                  <stringProp name="Header.name">Session-TTL</stringProp>
                  <stringProp name="Header.value">360</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20131023 Firefox/17.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="1889674496">tenant_name</stringProp>
                <stringProp name="339340927">user_name</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="2072969710">
                  <stringProp name="1350267837">${name}-${tenant_count}-tenant</stringProp>
                  <stringProp name="-1254416482">${name}-${tenant_count}-user</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Token token_id_scale" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">token_id_scale</stringProp>
              <stringProp name="RegexExtractor.regex">X-Subject-Token: (.+?)\s</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">None</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03.KEYSTONE.POST.Tenant.Token" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;auth&quot;:{&#xd;
	&quot;tenantName&quot;: &quot;${tenant_name}&quot;, &#xd;
	&quot;passwordCredentials&quot;: &#xd;
            {&quot;username&quot;: &quot;${user_name}&quot;, &#xd;
            &quot;password&quot;: &quot;qum5net&quot;&#xd;
            }&#xd;
        }&#xd;
	}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(server_ip)}</stringProp>
            <stringProp name="HTTPSampler.port">${keystone_service_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v2.0/tokens</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">KEYSTONE v2.0</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-TTL" elementType="Header">
                  <stringProp name="Header.name">Session-TTL</stringProp>
                  <stringProp name="Header.value">360</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20131023 Firefox/17.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="1889674496">tenant_name</stringProp>
                <stringProp name="339340927">user_name</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="2072969710">
                  <stringProp name="1350267837">${name}-${tenant_count}-tenant</stringProp>
                  <stringProp name="-1254416482">${name}-${tenant_count}-user</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Token token_id_scale" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">token_id_scale</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;: &quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">None</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract tenant_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">tenant_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;enabled&quot;: true, &quot;id&quot;: &quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">None</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop ${vm_amount}" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${vm_amount}</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04.NOVA.GET.Search.Server" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${__P(nova_api_server_ip)}</stringProp>
              <stringProp name="HTTPSampler.port">${nova_api_port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/v2.1/${tenant_id}/servers?name=${srv_name}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">26.NOVA.GET.Server.Id</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-Auth-Token</stringProp>
                    <stringProp name="Header.value">${token_id_scale}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="125278163">srv_name</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1066043784">
                    <stringProp name="-848605576">${name}-${tenant_count}-${vm_count}-vm</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract server_id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">server_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;: &quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">None</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Server ID != None" enabled="true">
              <stringProp name="IfController.condition">${__javaScript(&quot;${server_id}&quot; != &quot;None&quot;)}  </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05.NOVA.GET.Server.Floating.IP" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${__P(nova_api_server_ip)}</stringProp>
                <stringProp name="HTTPSampler.port">${nova_api_port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v2.1/${tenant_id}/servers/${server_id}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">NOVA.GET.Server.Details</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">X-Auth-Token</stringProp>
                      <stringProp name="Header.value">${token_id_scale}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract floating_ip" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">floating_ip</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;addr&quot;: &quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">None</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract floating_ip" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">floating_ip</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;addr&quot;: &quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">None</stringProp>
                  <stringProp name="RegexExtractor.match_number">2</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="06.SSH.PING.Instance" enabled="true">
                <stringProp name="command">sudo ping -c 1 ${floating_ip}</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-454137328">0% packet loss</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="UPDATE.IPTABLES.On.IPERF.SRV" enabled="true">
                <stringProp name="command">sudo iptables -I INPUT -p tcp -m tcp --dport ${uc_port} -j ACCEPT</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${iperf.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-610784366">uc_port</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1652365656">
                      <stringProp name="-1381713232">52${tenant_count}${vm_count}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="UPDATE.IPTABLES.On.IPERF.SRV" enabled="true">
                <stringProp name="command">sudo iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport ${uc_port} -j ACCEPT</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${iperf.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-610784366">uc_port</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1652365656">
                      <stringProp name="-1381713232">52${tenant_count}${vm_count}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="START.IPERF.SRV" enabled="false">
                <stringProp name="command">sudo iperf3 --server --daemon --port ${uc_port}</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${iperf.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-610784366">uc_port</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1652365656">
                      <stringProp name="-1381713232">52${tenant_count}${vm_count}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="START.IPERF.SRV" enabled="true">
                <stringProp name="command">sudo docker run  -d -i --name=iperf3-server --rm --publish ${uc_port}:${uc_port} networkstatic/iperf3 --port ${uc_port} --server &amp;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${iperf.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-610784366">uc_port</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1652365656">
                      <stringProp name="-1381713232">52${tenant_count}${vm_count}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="Create.Repo.On.Instance" enabled="false">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo echo $&apos;[rhel-server] \nName=RHEL server \nenabled=1 \nbaseurl=http://download.eng.tlv.redhat.com/pub/rhel/rel-eng/latest-RHEL-7/compose/Server/x86_64/os/  \ngpgcheck=0 \n&apos;  &gt; /tmp/rhel-osp-jmeter.repo&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="Copy.Repo.On.Instance" enabled="false">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo cp /tmp/rhel-osp-jmeter.repo /etc/yum.repos.d/&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="RPM.EPEL.On.Instance" enabled="false">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="YUM.IPERF.On.Instance" enabled="false">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo yum install -y iperf3.x86_64&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="YUM.STRESS-NG.On.Instance" enabled="false">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo yum install -y stress-ng.x86_64&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="RM.OLD.STAT" enabled="true">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo rm -rf /tmp/${floating_ip}*&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If stress.time.sec != 0" enabled="true">
                <stringProp name="IfController.condition">${__javaScript(&quot;${stress.time.sec}&quot; != 0)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="07.SSH.RUN.STRESS-NG.On.Instance" enabled="false">
                  <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo nohup stress-ng --cpu ${cpu.workers} --cpu-load ${cpu.percent} --vm ${vm.workers} --vm-bytes ${vm.mbytes}M --hdd ${hdd.workers} --hdd-bytes ${hdd.gbytes}G --timeout ${stress.time.sec}s --times --perf --metrics-brief --log-file /tmp/${floating_ip}-${file_date}-stressng.txt 1&gt;/dev/null 2&gt;&amp;1 &amp;&quot;</stringProp>
                  <intProp name="connectionTimeout">5000</intProp>
                  <stringProp name="hostname">${ospd.host}</stringProp>
                  <stringProp name="passphrase"></stringProp>
                  <stringProp name="password">${ospd.pass}</stringProp>
                  <intProp name="port">22</intProp>
                  <boolProp name="printStdErr">true</boolProp>
                  <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                  <boolProp name="useReturnCode">true</boolProp>
                  <boolProp name="useTty">false</boolProp>
                  <stringProp name="username">${ospd.user}</stringProp>
                </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
                <hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="-1316765551">file_date</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="615110608">
                        <stringProp name="-76401987">${__time(yyyy-MM-dd-hhmmss)}</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="07.SSH.RUN.STRESS-NG.On.Instance" enabled="true">
                  <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo docker run -i --name stress-ng --rm polinux/stress-ng  --cpu ${cpu.workers} --cpu-load ${cpu.percent} --vm ${vm.workers} --vm-bytes ${vm.mbytes}M --hdd ${hdd.workers} --hdd-bytes ${hdd.gbytes}G --timeout ${stress.time.sec}s --times --perf --metrics-brief &amp;&gt; /tmp/${floating_ip}-${file_date}-stressng.txt &amp;&quot;</stringProp>
                  <intProp name="connectionTimeout">5000</intProp>
                  <stringProp name="hostname">${ospd.host}</stringProp>
                  <stringProp name="passphrase"></stringProp>
                  <stringProp name="password">${ospd.pass}</stringProp>
                  <intProp name="port">22</intProp>
                  <boolProp name="printStdErr">true</boolProp>
                  <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                  <boolProp name="useReturnCode">true</boolProp>
                  <boolProp name="useTty">false</boolProp>
                  <stringProp name="username">${ospd.user}</stringProp>
                </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
                <hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="-1316765551">file_date</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="615110608">
                        <stringProp name="-76401987">${__time(yyyy-MM-dd-hhmmss)}</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If stress.time.sec == 0" enabled="true">
                <stringProp name="IfController.condition">${__javaScript(&quot;${stress.time.sec}&quot; == 0)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="07.SSH.RUN.STRESS-NG.On.Instance" enabled="false">
                  <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo nohup stress-ng --cpu ${cpu.workers} --cpu-load ${cpu.percent} --vm ${vm.workers} --vm-bytes ${vm.mbytes}M --hdd ${hdd.workers} --hdd-bytes ${hdd.gbytes}G --timeout 0 --times --perf --metrics-brief --verbose --log-file /tmp/${floating_ip}-${file_date}-stressng.txt 1&gt;/dev/null 2&gt;&amp;1 &amp;&quot;</stringProp>
                  <intProp name="connectionTimeout">5000</intProp>
                  <stringProp name="hostname">${ospd.host}</stringProp>
                  <stringProp name="passphrase"></stringProp>
                  <stringProp name="password">${ospd.pass}</stringProp>
                  <intProp name="port">22</intProp>
                  <boolProp name="printStdErr">true</boolProp>
                  <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                  <boolProp name="useReturnCode">true</boolProp>
                  <boolProp name="useTty">false</boolProp>
                  <stringProp name="username">${ospd.user}</stringProp>
                </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
                <hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="-1316765551">file_date</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="615110608">
                        <stringProp name="-76401987">${__time(yyyy-MM-dd-hhmmss)}</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
                <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="07.SSH.RUN.STRESS-NG.On.Instance" enabled="true">
                  <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo docker run -i --name stress-ng --rm polinux/stress-ng  --cpu ${cpu.workers} --cpu-load ${cpu.percent} --vm ${vm.workers} --vm-bytes ${vm.mbytes}M --hdd ${hdd.workers} --hdd-bytes ${hdd.gbytes}G --timeout 0 --times --perf --metrics-brief &amp;&gt; /tmp/${floating_ip}-${file_date}-stressng.txt &amp;&quot;</stringProp>
                  <intProp name="connectionTimeout">5000</intProp>
                  <stringProp name="hostname">${ospd.host}</stringProp>
                  <stringProp name="passphrase"></stringProp>
                  <stringProp name="password">${ospd.pass}</stringProp>
                  <intProp name="port">22</intProp>
                  <boolProp name="printStdErr">true</boolProp>
                  <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                  <boolProp name="useReturnCode">true</boolProp>
                  <boolProp name="useTty">false</boolProp>
                  <stringProp name="username">${ospd.user}</stringProp>
                </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
                <hashTree>
                  <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                    <collectionProp name="UserParameters.names">
                      <stringProp name="-1316765551">file_date</stringProp>
                    </collectionProp>
                    <collectionProp name="UserParameters.thread_values">
                      <collectionProp name="615110608">
                        <stringProp name="-76401987">${__time(yyyy-MM-dd-hhmmss)}</stringProp>
                      </collectionProp>
                    </collectionProp>
                    <boolProp name="UserParameters.per_iteration">false</boolProp>
                  </UserParameters>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="08.SSH.RUN.IPERF.On.Instance" enabled="false">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo iperf3 --client ${iperf.host} --port ${uc_port} --time ${stress.time.sec}s &gt;&gt; /tmp/${floating_ip}-${file_date}-iperf.txt &amp;&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-610784366">uc_port</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1652365656">
                      <stringProp name="-1381713232">52${tenant_count}${vm_count}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="08.SSH.RUN.IPERF.On.Instance" enabled="true">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo docker run -i --name iperf3 --rm networkstatic/iperf3 --client ${iperf.host} --port ${uc_port} --time ${stress.time.sec}s &amp;&gt; /tmp/${floating_ip}-${file_date}-iperf.txt &amp;&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-610784366">uc_port</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1652365656">
                      <stringProp name="-1381713232">52${tenant_count}${vm_count}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SCRIPT Increment Counter Servers" enabled="true">
              <stringProp name="BeanShellSampler.query">int c_vm = ${vm_count};
c_vm++;
vars.put(&quot;vm_count&quot;, String.valueOf(c_vm));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If stress.time.sec != 0" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${stress.time.sec}&quot; != 0)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SCRIPT Update Counters" enabled="true">
              <stringProp name="TestPlan.comments">SCRIPT Create Counters</stringProp>
              <stringProp name="BeanShellSampler.query">vars.put(&quot;vm_count&quot;, &quot;1&quot;);
int t_sec = ${stress.time.sec};
t_sec = t_sec * 1000;
vars.put(&quot;stress.time.msec&quot;, String.valueOf(t_sec));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Pause ${stress.time.msec}" enabled="true">
              <stringProp name="TestPlan.comments">1 min - 120000, 5 min - 300000, 30 min - 1800000</stringProp>
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">${stress.time.msec}</stringProp>
            </TestAction>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop ${vm_amount}" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${vm_amount}</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04.NOVA.GET.Search.Server" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${__P(nova_api_server_ip)}</stringProp>
                <stringProp name="HTTPSampler.port">${nova_api_port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v2.1/${tenant_id}/servers?name=${srv_name}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">26.NOVA.GET.Server.Id</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">X-Auth-Token</stringProp>
                      <stringProp name="Header.value">${token_id_scale}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="125278163">srv_name</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1066043784">
                      <stringProp name="-848605576">${name}-${tenant_count}-${vm_count}-vm</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract server_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">server_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;: &quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">None</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05.NOVA.GET.Server.Floating.IP" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${__P(nova_api_server_ip)}</stringProp>
                <stringProp name="HTTPSampler.port">${nova_api_port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/v2.1/${tenant_id}/servers/${server_id}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">NOVA.GET.Server.Details</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">X-Auth-Token</stringProp>
                      <stringProp name="Header.value">${token_id_scale}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract floating_ip" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">floating_ip</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;addr&quot;: &quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">None</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract floating_ip" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">floating_ip</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;addr&quot;: &quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">None</stringProp>
                  <stringProp name="RegexExtractor.match_number">2</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="SCP.STRESS.STAT" enabled="true">
                <stringProp name="command">sudo scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no &apos;cloud-user@${floating_ip}:/tmp/${floating_ip}-*-stressng.txt&apos; /tmp/${run.name}</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="RM.STRESS.STAT" enabled="true">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo rm -rf /tmp/${floating_ip}-*-stressng.txt&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="SCP.IPERF.STAT" enabled="true">
                <stringProp name="command">sudo scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no &apos;cloud-user@${floating_ip}:/tmp/${floating_ip}-*-iperf.txt&apos;  /tmp/${run.name}</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="RM.IPERF.STAT" enabled="true">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo rm -rf /tmp/${floating_ip}-*-iperf.txt&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="REMOVE.EPEL.On.Instance" enabled="true">
                <stringProp name="command">sudo ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no cloud-user@${floating_ip} &quot;sudo rpm -e epel-release-7-11.noarch&quot;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${ospd.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="GET.IPERF.PID.On.IPERF.SRV" enabled="true">
                <stringProp name="command">sudo ps -ef | grep iperf3 |grep ${uc_port} |awk &apos;NR==1 {print $1$2$8}&apos;</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${iperf.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="iperf_pid" enabled="true">
                  <stringProp name="TestPlan.comments">iperf_pid</stringProp>
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">iperf_pid</stringProp>
                  <stringProp name="RegexExtractor.regex">root(.+?)iperf3</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">None</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-610784366">uc_port</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1652365656">
                      <stringProp name="-1381713232">52${tenant_count}${vm_count}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="KILL.IPERF.On.IPERF.SRV" enabled="false">
                <stringProp name="command">sudo kill -9 ${iperf_pid}</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${iperf.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="KILL.IPERF.On.IPERF.SRV" enabled="true">
                <stringProp name="command">sudo docker stop iperf3-server</stringProp>
                <intProp name="connectionTimeout">5000</intProp>
                <stringProp name="hostname">${iperf.host}</stringProp>
                <stringProp name="passphrase"></stringProp>
                <stringProp name="password">${ospd.pass}</stringProp>
                <intProp name="port">22</intProp>
                <boolProp name="printStdErr">true</boolProp>
                <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
                <boolProp name="useReturnCode">true</boolProp>
                <boolProp name="useTty">false</boolProp>
                <stringProp name="username">${ospd.user}</stringProp>
              </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SCRIPT Increment Counter Servers" enabled="true">
                <stringProp name="BeanShellSampler.query">int c_vm = ${vm_count};
c_vm++;
vars.put(&quot;vm_count&quot;, String.valueOf(c_vm));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="PKILL.IPERF.ON.IPERF.SRV" enabled="false">
              <stringProp name="command">sudo pkill -f iperf3</stringProp>
              <intProp name="connectionTimeout">5000</intProp>
              <stringProp name="hostname">${iperf.host}</stringProp>
              <stringProp name="passphrase"></stringProp>
              <stringProp name="password">${ospd.pass}</stringProp>
              <intProp name="port">22</intProp>
              <boolProp name="printStdErr">true</boolProp>
              <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
              <boolProp name="useReturnCode">true</boolProp>
              <boolProp name="useTty">false</boolProp>
              <stringProp name="username">${ospd.user}</stringProp>
            </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler" testname="REMOVE.EPEL.On.IPERF.SRV" enabled="false">
              <stringProp name="command">sudo rpm -e epel-release-7-11.noarch</stringProp>
              <intProp name="connectionTimeout">5000</intProp>
              <stringProp name="hostname">${iperf.host}</stringProp>
              <stringProp name="passphrase"></stringProp>
              <stringProp name="password">${ospd.pass}</stringProp>
              <intProp name="port">22</intProp>
              <boolProp name="printStdErr">true</boolProp>
              <stringProp name="sshkeyfile">/root/.ssh/id_rsa</stringProp>
              <boolProp name="useReturnCode">true</boolProp>
              <boolProp name="useTty">false</boolProp>
              <stringProp name="username">${ospd.user}</stringProp>
            </org.apache.jmeter.protocol.ssh.sampler.SSHCommandSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">true</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">true</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - Monitor Full" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1413363900000</longProp>
        <longProp name="ThreadGroup.end_time">1413363900000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="CPU Util Undercloud Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_CPU_Undercloud.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="455772810">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="86731738">label=Undercloud Node System Util:system</stringProp>
            </collectionProp>
            <collectionProp name="-388827516">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="1340529618">label=Undercloud Node User Util:user</stringProp>
            </collectionProp>
            <collectionProp name="-141939549">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="1712114852">label=Undercloud Node Idle Util:idle</stringProp>
            </collectionProp>
            <collectionProp name="1520881130">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="121961650">label=Undercloud Node Iowait Util:iowait</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="CPU Util Controller Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_CPU_Controller.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1507497037">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="589832217">label=Controller Node System Util:system</stringProp>
            </collectionProp>
            <collectionProp name="1118174211">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-861042799">label=Controller Node User Util:user</stringProp>
            </collectionProp>
            <collectionProp name="-781135288">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-489457565">label=Controller Node Idle Util:idle</stringProp>
            </collectionProp>
            <collectionProp name="2026180529">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="625062129">label=Controller Node Iowait Util:iowait</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="CPU Util Compute Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_CPU_Compute.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-395491253">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-899540734">label=Compute Node System Util:system</stringProp>
            </collectionProp>
            <collectionProp name="-1043166473">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="1183997178">label=Compute Node User Util:user</stringProp>
            </collectionProp>
            <collectionProp name="-796254419">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="1555582412">label=Compute Node Idle Util:idle</stringProp>
            </collectionProp>
            <collectionProp name="555829684">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-864310822">label=Compute Node Iowait Util:iowait</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="CPU Util Ceph Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_CPU_Ceph.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1137586814">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-1468031209">label=Ceph Node System Util:system</stringProp>
            </collectionProp>
            <collectionProp name="-1396996068">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-1960299121">label=Ceph Node User Util:user</stringProp>
            </collectionProp>
            <collectionProp name="1738613592">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-1588713887">label=Ceph Node Idle Util:idle</stringProp>
            </collectionProp>
            <collectionProp name="1318869817">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-1432801297">label=Ceph Node Iowait Util:iowait</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Mem Util Overcloud Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Memory_Undercloud.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1416600588">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="475326742">label=Undercloud Node Used:used</stringProp>
            </collectionProp>
            <collectionProp name="-435574540">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="102710902">label=Undercloud Node Free:free</stringProp>
            </collectionProp>
            <collectionProp name="333778521">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="1567625290">label=Undercloud Node Total:total</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Mem Util Controller Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Memory_Controller.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="17010933">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="1844683255">label=Controller Node Used:used</stringProp>
            </collectionProp>
            <collectionProp name="1957737286">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="1472067415">label=Controller Node Free:free</stringProp>
            </collectionProp>
            <collectionProp name="510367603">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="-1035725589">label=Controller Node Total:total</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Mem Util Compute Node " enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Memory_Compute.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1461903243">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="83316462">label=Compute Node Used:used</stringProp>
            </collectionProp>
            <collectionProp name="975260916">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="-289299378">label=Compute Node Free:free</stringProp>
            </collectionProp>
            <collectionProp name="1819367206">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="-1492099038">label=Compute Node Total:total</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Mem Util Ceph Node " enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Memory_Ceph.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1986375345">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="-1108890311">label=Ceph Node Used:used</stringProp>
            </collectionProp>
            <collectionProp name="1911520091">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="-1481506151">label=Ceph Node Free:free</stringProp>
            </collectionProp>
            <collectionProp name="1145120218">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="-446539859">label=Ceph Node Total:total</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Network Util" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Network.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="654431782">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="2126245377">label=Undercloud Node Recv:bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="-1826245922">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-1955405083">label=Undercloud Node Sent:bytessent</stringProp>
            </collectionProp>
            <collectionProp name="-1226638335">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-75327040">label=Controller Node Recv:bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="1052446741">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="137989796">label=Controller Node Sent:bytessent</stringProp>
            </collectionProp>
            <collectionProp name="654757991">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="1969712937">label=Compute Node Recv:bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="-1117339692">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2111937523">label=Compute Node Sent:bytessent</stringProp>
            </collectionProp>
            <collectionProp name="654757991">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="1969712937">label=Compute Node Recv:bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="1726854515">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-961266526">label=Ceph Node Sent:bytessent</stringProp>
            </collectionProp>
            <collectionProp name="1034080918">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-1174583362">label=Ceph Node Recv:bytesrecv</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Disk Util" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Disk.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="714796092">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="1367483964">label=Undercloud Node Reads:reads</stringProp>
            </collectionProp>
            <collectionProp name="-1018981731">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-2070688778">label=Undercloud Node Writes:writes</stringProp>
            </collectionProp>
            <collectionProp name="-1506179841">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-1235866915">label=Controller Node Reads:reads</stringProp>
            </collectionProp>
            <collectionProp name="551944385">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="75050071">label=Controller Node Writes:writes</stringProp>
            </collectionProp>
            <collectionProp name="543519099">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-1692240364">label=Compute Node Reads:reads</stringProp>
            </collectionProp>
            <collectionProp name="1121542072">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-413170226">label=Compute Node Writes:writes</stringProp>
            </collectionProp>
            <collectionProp name="-847557009">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-646681185">label=Ceph Node Reads:reads</stringProp>
            </collectionProp>
            <collectionProp name="-1655700159">
              <stringProp name="-625209640">${ceph.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-653146471">label=Ceph Node Writes:writes</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - Monitor Not Full" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1413363900000</longProp>
        <longProp name="ThreadGroup.end_time">1413363900000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="CPU Util Undercloud Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_CPU_Undercloud.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="455772810">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="86731738">label=Undercloud Node System Util:system</stringProp>
            </collectionProp>
            <collectionProp name="-388827516">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="1340529618">label=Undercloud Node User Util:user</stringProp>
            </collectionProp>
            <collectionProp name="-141939549">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="1712114852">label=Undercloud Node Idle Util:idle</stringProp>
            </collectionProp>
            <collectionProp name="1520881130">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="121961650">label=Undercloud Node Iowait Util:iowait</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="CPU Util Controller Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_CPU_Controller.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1507497037">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="589832217">label=Controller Node System Util:system</stringProp>
            </collectionProp>
            <collectionProp name="1118174211">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-861042799">label=Controller Node User Util:user</stringProp>
            </collectionProp>
            <collectionProp name="-781135288">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-489457565">label=Controller Node Idle Util:idle</stringProp>
            </collectionProp>
            <collectionProp name="2026180529">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="625062129">label=Controller Node Iowait Util:iowait</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="CPU Util Compute Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_CPU_Compute.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-395491253">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-899540734">label=Compute Node System Util:system</stringProp>
            </collectionProp>
            <collectionProp name="-1043166473">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="1183997178">label=Compute Node User Util:user</stringProp>
            </collectionProp>
            <collectionProp name="-796254419">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="1555582412">label=Compute Node Idle Util:idle</stringProp>
            </collectionProp>
            <collectionProp name="555829684">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-864310822">label=Compute Node Iowait Util:iowait</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Mem Util Overcloud Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Memory_Undercloud.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1416600588">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="475326742">label=Undercloud Node Used:used</stringProp>
            </collectionProp>
            <collectionProp name="-435574540">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="102710902">label=Undercloud Node Free:free</stringProp>
            </collectionProp>
            <collectionProp name="333778521">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="1567625290">label=Undercloud Node Total:total</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Mem Util Controller Node" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Memory_Controller.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="17010933">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="1844683255">label=Controller Node Used:used</stringProp>
            </collectionProp>
            <collectionProp name="1957737286">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="1472067415">label=Controller Node Free:free</stringProp>
            </collectionProp>
            <collectionProp name="510367603">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="-1035725589">label=Controller Node Total:total</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Mem Util Compute Node " enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Memory_Compute.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1461903243">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="83316462">label=Compute Node Used:used</stringProp>
            </collectionProp>
            <collectionProp name="975260916">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="-289299378">label=Compute Node Free:free</stringProp>
            </collectionProp>
            <collectionProp name="1819367206">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="-1492099038">label=Compute Node Total:total</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Network Util" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Network.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="654431782">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="2126245377">label=Undercloud Node Recv:bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="-1826245922">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-1955405083">label=Undercloud Node Sent:bytessent</stringProp>
            </collectionProp>
            <collectionProp name="-1226638335">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-75327040">label=Controller Node Recv:bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="1052446741">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="137989796">label=Controller Node Sent:bytessent</stringProp>
            </collectionProp>
            <collectionProp name="654757991">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="1969712937">label=Compute Node Recv:bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="-1117339692">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2111937523">label=Compute Node Sent:bytessent</stringProp>
            </collectionProp>
            <collectionProp name="654757991">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="1969712937">label=Compute Node Recv:bytesrecv</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Disk Util" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${proj.path}/results/${run.name}/xml/Monitor_Disk.jtl</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="714796092">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="1367483964">label=Undercloud Node Reads:reads</stringProp>
            </collectionProp>
            <collectionProp name="-1018981731">
              <stringProp name="-1772977834">${ospd.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-2070688778">label=Undercloud Node Writes:writes</stringProp>
            </collectionProp>
            <collectionProp name="-1506179841">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-1235866915">label=Controller Node Reads:reads</stringProp>
            </collectionProp>
            <collectionProp name="551944385">
              <stringProp name="1735631536">${contr.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="75050071">label=Controller Node Writes:writes</stringProp>
            </collectionProp>
            <collectionProp name="543519099">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-1692240364">label=Compute Node Reads:reads</stringProp>
            </collectionProp>
            <collectionProp name="1121542072">
              <stringProp name="351713357">${comp.host}</stringProp>
              <stringProp name="1218634149">${port}</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-413170226">label=Compute Node Writes:writes</stringProp>
            </collectionProp>
          </collectionProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename">${proj.path}/results/${run.name}/xml/ViewResultsTree.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename">${proj.path}/results/${run.name}/xml/AggrReport.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Graphite Backend Listener " enabled="false">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="graphiteMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">graphiteMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.graphite.TextGraphiteMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="graphiteHost" elementType="Argument">
              <stringProp name="Argument.name">graphiteHost</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="graphitePort" elementType="Argument">
              <stringProp name="Argument.name">graphitePort</stringProp>
              <stringProp name="Argument.value">2005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rootMetricsPrefix" elementType="Argument">
              <stringProp name="Argument.name">rootMetricsPrefix</stringProp>
              <stringProp name="Argument.value">restapi_</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersList" elementType="Argument">
              <stringProp name="Argument.name">samplersList</stringProp>
              <stringProp name="Argument.value">01.KEYSTONE.POST.Admin.Token;02.KEYSTONE.GET.Admin.Tenant;03.KEYSTONE.POST.Create.Tenant;04.KEYSTONE.POST.Create.User;05.KEYSTONE.GET.Admin.Roles;06.KEYSTONE.GET.User.Roles;07.KEYSTONE.PUT.Grant.Admin.Role;08.KEYSTONE.POST.Tenant.Token;09.NOVA.GET.Images;10.NOVA.GET.Flavors;11.NEUTRON.POST.Create.Network;12.NEUTRON.POST.Create.Subnet;13.NOVA.POST.Boot.Server.Trx;13.NOVA.POST.Boot.Server;00.NOVA.GET.Server.Details;14.NOVA.POST.Pause.Server.Trx;14.NOVA.POST.Pause.Server;15.NOVA.POST.Unpause.Server.Trx;15.NOVA.POST.Unpause.Server;16.NOVA.POST.Suspend.Server.Trx;16.NOVA.POST.Suspend.Server;17.NOVA.POST.Resume.Server.Trx;17.NOVA.POST.Resume.Server;18.NOVA.POST.Soft.Reboot.Server.Trx;18.NOVA.POST.Soft.Reboot.Server;19.NOVA.POST.Hard.Reboot.Server.Trx;19.NOVA.POST.Hard.Reboot.Server;20.NOVA.POST.Stop.Server.Trx;20.NOVA.POST.Stop.Server;21.NOVA.POST.Start.Server.Trx;21.NOVA.POST.Start.Server;22.NOVA.POST.Create.Image.Trx;22.NOVA.POST.Create.Image;23.NOVA.GET.Image.Id;24.NOVA.DELETE.Image;25.NOVA.DELETE.Server.Trx;25.NOVA.DELETE.Server;27.NEUTRON.DELETE.Subnet;28.NEUTRON.DELETE.Network;29.KEYSTONE.DELETE.Tenant;29.KEYSTONE.DELETE.Tenant</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.graphite.GraphiteBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="InfluxDB Backend Listener" enabled="false">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="graphiteMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">graphiteMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.graphite.TextGraphiteMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="graphiteHost" elementType="Argument">
              <stringProp name="Argument.name">graphiteHost</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="graphitePort" elementType="Argument">
              <stringProp name="Argument.name">graphitePort</stringProp>
              <stringProp name="Argument.value">2003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rootMetricsPrefix" elementType="Argument">
              <stringProp name="Argument.name">rootMetricsPrefix</stringProp>
              <stringProp name="Argument.value">jmeter.</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersList" elementType="Argument">
              <stringProp name="Argument.name">samplersList</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.graphite.GraphiteBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${proj.path}/results/${run.name}/xml/test-result.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${proj.path}/results/${run.name}/xml/TPS.jtl</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
