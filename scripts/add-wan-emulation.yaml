#!/usr/bin/env ansible-playbook
---
- name: Direct deploy
  hosts: undercloud-0
  vars:
   tc_uc_device: br-ctlplane
   tc_ctrl_device: br-ex
   tc_delay: 50
   tc_limit: 15000000
  
  tasks:

  - name: Enable the admin user access to other Swift accounts
    shell: "source /home/stack/stackrc && openstack server list | grep controller | wc -l"
    register: contr_count

  - name: Enable the admin user access to other Swift accounts
    shell: "source /home/stack/stackrc && openstack server list --name controller -f value -c Networks|awk -F = '{print \\$2}'"
    register: contr_nodes

# Undercloud add Delay
  - name: Start tc qdisc add for outgoing traffic
    shell: "sudo tc qdisc add dev {{ tc_uc_device }} root netem delay {{ tc_delay }}ms limit {{ tc_limit }}"

  - name: Create interface ifb for incoming traffic 
    shell: "sudo modprobe ifb"

  - name: Start interface ifb
    shell: "sudo ip link set dev ifb0 up"

  - name: Add device to be ingress
    shell: "sudo tc qdisc add dev {{ tc_uc_device }} ingress"

  - name: Configure device to be ingress
    shell: "sudo tc filter add dev {{ tc_uc_device }} parent ffff: protocol ip u32 match u32 0 0 flowid 1:1 action mirred egress redirect dev ifb0"

  - name: Start tc qdisc add for incoming traffic
    shell: "sudo tc qdisc add dev ifb0 root netem delay {{ tc_delay }}ms limit {{ tc_limit }}"

# Controller nodes add Delay
  - name: Start tc qdisc add for outgoing traffic
    shell: "ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@{{ item }} \"sudo tc qdisc add dev {{ tc_ctrl_device }} root netem delay {{ tc_delay }}ms limit {{ tc_limit }}\""
    with_items: "{{ contr_nodes.stdout_lines }}"
    when: contr_count.stdout != "0"

  - name: Create interface ifb for incoming traffic 
    shell: "ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@{{ item }} \"sudo modprobe ifb\""
    with_items: "{{ contr_nodes.stdout_lines }}"
    when: contr_count.stdout != "0"

  - name: Start interface ifb
    shell: "ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@{{ item }} \"sudo ip link set dev ifb0 up\""
    with_items: "{{ contr_nodes.stdout_lines }}"
    when: contr_count.stdout != "0"

  - name: Add device to be ingress
    shell: "ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@{{ itemut }} \"sudo tc qdisc add dev {{ tc_ctrl_device }} ingress\""
    with_items: "{{ contr_nodes.stdout_lines }}"
    when: contr_count.stdout != "0"

  - name: Configure device to be ingress
    shell: "ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@{{ item }} \"sudo tc filter add dev {{ tc_ctrl_device }} parent ffff: protocol ip u32 match u32 0 0 flowid 1:1 action mirred egress redirect dev ifb0\""
    with_items: "{{ contr_nodes.stdout_lines }}"
    when: contr_count.stdout != "0"

  - name: Start tc qdisc add for incoming traffic
    shell: "ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@{{ item }} \"sudo tc qdisc add dev ifb0 root netem delay {{ tc_delay }}ms limit {{ tc_limit }}\""
    with_items: "{{ contr_nodes.stdout_lines }}"
    when: contr_count.stdout != "0"

# --------------------------------------------------------------------------------------------------------------------------------------
# END
# --------------------------------------------------------------------------------------------------------------------------------------

